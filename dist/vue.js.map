{"version":3,"file":"vue.js","sources":["../src/vnode/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/lifecycle.js","../src/observe/arr.js","../src/observe/index.js","../src/initState.js","../src/compile/parseHTML.js","../src/compile/gengerate.js","../src/compile/index.js","../src/utils.js","../src/init.js","../src/globalAPI.js","../src/index.js"],"sourcesContent":["// _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n  if(data === null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  if(key) {\r\n    delete data.key\r\n  }\r\n  return vnode(vm,tag,key,data,children)\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm,text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction vnode(vm, tagName, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tagName,\r\n    key,\r\n    data,\r\n    children,\r\n    text\r\n  }\r\n}\r\n","/* \r\n  dep是属性管理watcher的实例\r\n*/\r\nlet id = 0\r\nclass Dep{\r\n  constructor(){\r\n    this.id = id++\r\n    this.subs = []\r\n\r\n  }\r\n  depend() {\r\n    Dep.target.addDep(this) // 访问全局变量里的watcher，完成watcher对dep的收集，dep对watcher的收集\r\n  }\r\n  addSub(watcher) {\r\n    this.subs.push(watcher) // dep收集watcher\r\n  }\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update()) // 通知watcher更新\r\n  }\r\n}\r\nconst stack = []\r\nexport function pushTarget(watcher) {\r\n  stack.push(watcher)\r\n  Dep.target = watcher\r\n}\r\nexport function popTarget(watcher) {\r\n  stack.pop()\r\n  Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep ","import Dep, { popTarget, pushTarget } from './dep'\r\n\r\nlet id = 0\r\n\r\nclass Watch {\r\n  constructor(vm, exprOrFn, options, cb) {\r\n    this.id = id++\r\n    this.renderWatcher = options\r\n    this.getter = typeof exprOrFn === 'string'\r\n      ? function() { return vm[exprOrFn] }  //用户Watch,访问vm[exprOrFn]收集此watcher\r\n      : exprOrFn\r\n    this.deps = []\r\n    this.cb = cb  // 用户Watch传入函数 \r\n    this.depsId = new Set()\r\n    this.lazy = options.lazy\r\n    this.dirty = this.lazy  // computed取值由脏值决定\r\n    this.vm = vm\r\n    this.user = options.user\r\n    this.value = this.lazy ? undefined : this.get() // 缓存Watch旧值\r\n  }\r\n\r\n  // 执行函数\r\n  get() {\r\n    pushTarget(this) // watcher内函数执行，装载入全局变量使依赖收集\r\n    console.log(this.getter)\r\n    const value = this.getter.call(this.vm)\r\n    popTarget()\r\n    return value\r\n  }\r\n\r\n  evaluate() {   // computed取值并清空脏值\r\n    this.value = this.get()\r\n    this.dirty = false\r\n  }\r\n\r\n  // watcher收集dep\r\n  addDep(dep) {\r\n    let id = dep.id\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this)  //dep收集watcher\r\n    }\r\n  }\r\n  depend() {\r\n    let i = this.deps.length\r\n    while(i--){\r\n      this.deps[i].depend()\r\n    }\r\n  }\r\n  update() {\r\n    if (this.lazy) {\r\n      this.dirty = true // 依赖更新时计算watcher需要标记为脏值\r\n    } else {\r\n      queueWatcher(this) // 异步队列执行函数\r\n    }\r\n  }\r\n\r\n  run() {\r\n    let oldValue = this.value\r\n    let newValue = this.get()\r\n    if(this.user){\r\n      this.cb.call(this.vm,newValue,oldValue)\r\n    }\r\n  }\r\n\r\n\r\n}\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false\r\n\r\nfunction flushSchedulerQueue() {\r\n  let flushQueue = queue.slice(0)\r\n  queue = []\r\n  has = {}\r\n  pending = false\r\n  flushQueue.forEach(q => q.run())\r\n}\r\n\r\n/* \r\n  下一轮宏任务之前的watcher.update都存在闭包queue，再执行前都可以加入队列\r\n*/\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id\r\n  if (!has[id]) {\r\n    queue.push(watcher)\r\n    has[id] = true\r\n  }\r\n  if (!pending) {\r\n    vm.$nextTick(flushSchedulerQueue, 0)\r\n    pending = true\r\n  }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n  waiting = false\r\n  let cbs = callbacks.slice(0)\r\n  callbacks = []\r\n  cbs.forEach(cb => cb())\r\n}\r\nlet timeFn\r\nif (Promise) {\r\n  timeFn = () => { Promise.resolve().then(flushCallbacks) }\r\n} else if (MutationObserver) {\r\n  const observe = new MutationObserver(flushCallbacks)\r\n  const textNode = document.createTextNode(1)\r\n  observe.observe(textNode, { characterData: true })\r\n  timeFn = () => { textNode.textContent = 2 }\r\n} else if (setImmediate) {\r\n  timeFn = () => { setImmediate(flushCallbacks) }\r\n} else {\r\n  timeFn = () => { setTimeout(flushCallbacks, 0) }\r\n}\r\n\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb)\r\n  if (!waiting) {\r\n    timeFn()\r\n    waiting = true\r\n  }\r\n}\r\n\r\n\r\nexport default Watch","import { createElementVNode, createTextVNode } from \"./vnode/index\"\r\nimport Watch from \"./observe/watcher\"\r\n\r\nfunction patchProps(el, props) {\r\n  for (let key in props) {\r\n    if (key === 'style') {\r\n      for (let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName]\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key])\r\n    }\r\n  }\r\n}\r\n\r\nfunction createEl(vnode) {\r\n  const { tagName, data, children, text } = vnode\r\n  if (typeof tagName === 'string') {\r\n    vnode.el = document.createElement(tagName)\r\n    patchProps(vnode.el, data)\r\n    children.forEach(item => {\r\n      vnode.el.appendChild(createEl(item))\r\n    })\r\n  } else {\r\n    vnode.el = document.createTextNode(text)\r\n  }\r\n  return vnode.el\r\n}\r\n\r\n/* \r\n  path:\r\n  对传入的新旧节点判断\r\n  若旧节点为真实元素则为初次渲染，找到真实元素父级，挂载vnode生成的dom\r\n*/\r\nfunction path(oldVNode, vnode) {\r\n  const isRealElement = oldVNode.nodeType\r\n  if (isRealElement) {\r\n    const el = oldVNode\r\n    const parentEl = el.parentNode\r\n    const newEl = createEl(vnode)\r\n    parentEl.insertBefore(newEl, el.nextSibing) //插入下个兄弟节点前\r\n    parentEl.removeChild(el)\r\n    return newEl\r\n  } else {\r\n    // 比较 diff\r\n  }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this\r\n    const el = vm.$el\r\n    vm.$el = path(el, vnode) // 视图更新后，更新vm.$el值\r\n  }\r\n\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n    return vm.$options.render.call(vm)\r\n  }\r\n\r\n  Vue.prototype._c = function (value) {\r\n    return createElementVNode(this, ...arguments)\r\n  }\r\n\r\n  Vue.prototype._v = function (value) {\r\n    return createTextVNode(this, ...arguments)\r\n  }\r\n\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value === 'object') {\r\n      return JSON.stringify(value)\r\n    }\r\n    return value\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  /* \r\n    1.定义updateComponent: 将render生成的vnode通过path转换为真实元素并挂载\r\n    2.将updateComponent注册到watch,当依赖变化后会自动更新视图\r\n  */\r\n  vm.$el = el\r\n  const updateComponent  = () => {\r\n    const vnode = vm._render()\r\n    vm._update(vnode)\r\n  }\r\n  new Watch(vm, updateComponent, true) // true用于标识watcher\r\n}\r\n\r\nexport function callHook (vm,hook) {  // 生命周期函数执行\r\n  const handlers = vm.$options[hook];\r\n    if(handlers){\r\n        handlers.forEach(handler=>handler.call(vm))\r\n    }\r\n}","// 原型嫁接，在中间重写同名原型方法\r\nconst oldArrayProtoMethods = Array.prototype\r\nconst ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nconst methods = [\r\n  'push',\r\n  'pop',\r\n  'unshift',\r\n  'shift',\r\n  'splice'\r\n]\r\n\r\n// 数组劫持\r\nmethods.forEach(item => {\r\n  ArrayMethods[item] = function (...args) {\r\n    let result = oldArrayProtoMethods[item].apply(this, args)\r\n    let inserted  // 记录数组新增项\r\n    switch (item) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.splice(2)\r\n        break;\r\n    }\r\n    let ob = this.__ob__\r\n    if(inserted) {\r\n      // 对新增项的代理\r\n      ob.observerArray(inserted)\r\n    }\r\n    ob.dep.notify() //通知更新\r\n    return result\r\n  }\r\n})\r\n\r\nexport {ArrayMethods}\r\n","/* \r\n  observe:对传入值进行数据劫持\r\n  1.对object的key设置gettter,seetter,在其中通过闭包存储dep类，实现watcher搜集\r\n    对arr的数组值新增\r\n  3.递归重复,处理对象多层级\r\n*/\r\nimport { ArrayMethods } from './arr'\r\nimport Dep from './dep'\r\n\r\nexport function observe(data) {\r\n  if(typeof data !== 'object' || data == null){\r\n    return // 只对对象代理\r\n}\r\nif(data.__ob__ instanceof Observer){ // 代理过了\r\n    return data.__ob__;\r\n}\r\nreturn new Observer(data);\r\n}\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    this.dep = new Dep()  // 对象本身的dep\r\n    Object.defineProperty(data,'__ob__',{ // __ob__指向实例，可以取到对象的dep，还有标识作用\r\n      enumerable:false,\r\n      value:this\r\n    })\r\n    // console.log('层级代理', data)\r\n    if (Array.isArray(data)) {\r\n      // 数组代理\r\n      data.__proto__ = ArrayMethods\r\n      this.observerArray(data)\r\n    } else {\r\n      // 对象代理\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) {\r\n    let keys = Object.keys(data)\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i]\r\n      const value = data[key]\r\n      defineReactive(data, key, value)\r\n\r\n    }\r\n  }\r\n  observerArray(data) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      observe(data[i])\r\n    }\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  let childOb = observe(value)  // 递归此逻辑 + 返回对象的dep\r\n  const dep = new Dep() // 属性的dep\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      console.log(`${key}  被访问`)\r\n      /* \r\n        watcher与dep的双向收集\r\n        此处属性dep和对象dep是同步收集的，\r\n        即保证了watcher的收集是一致的\r\n        所以使得数组新增后通过__ob__属性访问到数组对应的Observer实例\r\n        从而拿到dep属性进行watcher的通知\r\n      */\r\n      if(Dep.target){\r\n        dep.depend() //属性dep\r\n        if(childOb){\r\n          childOb.dep.depend()  // 对象dep\r\n          if(Array.isArray(value)) {  //子集数组的dep收集\r\n            dependArray(value)\r\n          }\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if(key === 'pid') debugger;\r\n      console.log(`${key}  被设置  ${newValue}`)\r\n      if (newValue === value) return value\r\n      observe(newValue) // 新值可能需要代理\r\n      value = newValue\r\n      dep.notify()  // watcher执行\r\n    }\r\n  })\r\n}\r\n\r\n// 层级数组依赖收集\r\nfunction dependArray(value){\r\n  for(let i = 0; i < value.length;i++){\r\n      let current = value[i]\r\n      current.__ob__ && current.__ob__.dep.depend();\r\n      if(Array.isArray(current)){\r\n          dependArray(current);\r\n      }\r\n  }\r\n}\r\n","import { observe } from \"./observe/index.js\"\r\nimport Watch from \"./observe/watcher.js\"\r\nimport { nextTick } from \"./observe/watcher\"\r\nimport Dep from \"./observe/dep.js\"\r\n\r\nexport function initState(vm) {\r\n  let opts = vm.$options\r\n  //判断\r\n  if (opts.props) {\r\n    initProp()\r\n  }\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n  if (opts.methods) {\r\n    initMethods()\r\n  }\r\n}\r\nfunction initProp() { }\r\nfunction initData(vm) {\r\n  console.log('init data')\r\n  let data = vm.$options.data\r\n  data = vm._data = typeof data === 'function'\r\n    ? data.call(vm)\r\n    : data\r\n  // data属性代理到实例\r\n  for (let key in data) {\r\n    proxy(vm, key)\r\n  }\r\n  // 设置劫持\r\n  observe(data)\r\n}\r\nfunction initWatch(vm) {\r\n  let watch = vm.$options.watch;\r\n  for (let key in watch) {\r\n    const handler = watch[key]; // 字符串 数组 函数\r\n    if (Array.isArray(handler)) {\r\n      for (let i = 0; i < handler.length; i++) {\r\n        createWatcher(vm, key, handler[i]);\r\n      }\r\n    } else {\r\n      createWatcher(vm, key, handler);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n  // 字符串  函数\r\n  if (typeof handler === 'string') {\r\n      handler = vm[handler];\r\n  }\r\n  return vm.$watch(key, handler)\r\n}\r\n\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed;\r\n  const watchers = vm._computedWatchers = {}; // 将计算属性watcher保存到vm上\r\n  for (let key in computed) {\r\n    let userDef = computed[key];\r\n\r\n    // 函数和对象形式\r\n    let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n    // 计算属性watcher\r\n    watchers[key] = new Watch(vm, fn, { lazy: true })\r\n\r\n    defineComputed(vm, key, userDef);\r\n  }\r\n}\r\nfunction defineComputed(vm, key, userDef) {\r\n  const setter = userDef.set || (() => { })\r\n\r\n  // 挂载vm且设置代理\r\n  Object.defineProperty(vm, key, {\r\n    get: createComputedGetter(key),\r\n    set: setter\r\n  })\r\n}\r\n\r\n// 脏值求值，非脏值取缓存\r\nfunction createComputedGetter(key) {\r\n  return function () {\r\n    const watcher = this._computedWatchers[key]; // 获取到对应属性的watcher\r\n    if (watcher.dirty) {\r\n      // 脏值则更新\r\n      watcher.evaluate();\r\n    }\r\n    /* \r\n      如果Dep.target在计算watcher出栈后还存在，说明了前一个watcher的get()中包含了此计算watcher的get()\r\n      说明前一个watcher执行时访问了计算属性，说明计算属性也是这个watcher的依赖\r\n      所以需要在计算属性的watcher中拿到计算属性的依赖的dep,用他们的dep存储前一个watcher\r\n\r\n      即计算属性中的依赖收集了计算属性的watcher,和用到了计算属性的watcher\r\n    */\r\n    if (Dep.target) {\r\n      watcher.depend();\r\n    }\r\n    return watcher.value; // 最后返回的是watcher上的值\r\n  }\r\n}\r\n\r\nfunction initMethods() { }\r\n\r\n\r\nfunction proxy(vm, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm._data[key]\r\n    },\r\n    set(newValue) {\r\n      vm._data[key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick;\r\n  Vue.prototype.$watch = function (exprOrFn, cb) {\r\n      // watch注册的变量变化了则执行cb函数\r\n      new Watch(this, exprOrFn, { user: true }, cb)\r\n  }\r\n}\r\n","\r\n// * 0或多  + 1或多  ? 0或1  (?:)不捕获分组  [^xx]除xx以外 \\s空白符 \r\nconst ncname = '[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*' // 标签名\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` // (?:${ncame}\\\\:)? xml的命名空间\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 捕获开始标签名\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 捕获 key=value 或 key\r\nconst startTagClose = /^\\s*(\\/?)>/ // 捕获开始标签结束\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>*`) // 捕获结束标签名\r\n\r\n// 生成 对应 ast对象\r\nlet root  // 根元素\r\nlet createParent   // 栈顶元素\r\nlet stack = []\r\n\r\nfunction createASTElement(tagName, attrs,type=1,text) {\r\n  return {\r\n    tagName,\r\n    attrs,\r\n    children: [],\r\n    type,\r\n    text,\r\n    parent: null\r\n  }\r\n}\r\n\r\nfunction start(tagName, attrs) {\r\n  const element = createASTElement(tagName, attrs)\r\n  if (!root) {\r\n    root = element\r\n  }\r\n  createParent = element\r\n  stack.push(element)\r\n}\r\nfunction charts(text) {\r\n  text = text.replace(/s/g, '')\r\n  if (text) {\r\n    createParent.children.push({\r\n      type: 3,\r\n      text,\r\n      parent:createParent\r\n    })\r\n  }\r\n}\r\nfunction end(tagName) {\r\n  const element = stack.pop() //元素闭合出栈\r\n  createParent = stack[stack.length - 1]\r\n  if (createParent) { //处理元素层级\r\n    element.parent = createParent.tagName\r\n    createParent.children.push(element)\r\n  }\r\n}\r\n\r\n// html捕获\r\nfunction parseHTML(html) {\r\n  // <div id=\"app\"><span>number:{{a}}</span><span>...</span></div>\r\n  /* \r\n    搜索html字符串中 < 的位置，判断当前字符串内容\r\n    1.textEnd === 0 标签\r\n    2.textEnd > 0 文本或注释 + 标签\r\n    3.textEnd < 0 文本或注释或空\r\n  */\r\n  while (html) {\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd === 0) {\r\n      // debugger\r\n      // 开始标签\r\n      const startTagMatch = parseStartTag()\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n      }\r\n      // 结束标签\r\n      const endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n      }\r\n      continue;\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.slice(0, textEnd)\r\n      if (text) {\r\n        advance(text.length)\r\n        charts(text)\r\n      }\r\n    }\r\n  }\r\n  // 解析开始标签\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)  // T:匹配内容 捕获组1...  F:null\r\n    if (!start) return\r\n    const match = {\r\n      tagName: start[1],\r\n      attrs: [],\r\n    }\r\n    advance(start[0].length)\r\n    let attr\r\n    let end\r\n    // 没匹配闭合标签且匹配到了属性\r\n    while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n      match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n      advance(attr[0].length)\r\n    }\r\n    if (end) {\r\n      advance(end[0].length)\r\n    }\r\n    return match\r\n  }\r\n  // 字符串删除\r\n  function advance(n) {\r\n    html = html.slice(n)\r\n  }\r\n\r\n  return root\r\n}\r\n\r\nexport {parseHTML}","/* \r\n  ast对象       -->       代码字符串\r\n  _c(标签名,属性，子集)\r\n  _v(文本) _s(文本变量处理)\r\n*/\r\n\r\nexport { codegen }\r\n\r\nfunction codegen(ast) {\r\n  const tagName = ast.tagName\r\n  const attrObj = ast.attrs.length\r\n    ? genProps(ast.attrs)\r\n    : 'null'\r\n  const children = ast.children.length\r\n    ? `${genChildren(ast.children)}`\r\n    : ''\r\n  const code = `_c(\"${tagName}\",${attrObj},${children})`\r\n  return code\r\n}\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    const attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 捕获插值表达式内变量\r\n\r\nfunction genChildren(children) {\r\n  return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node)\r\n  } else {\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      // 插值表达式解析\r\n      let tokens = []\r\n      let match\r\n      defaultTagRE.lastIndex = 0\r\n      let lastIndex = 0 // 记录上一次匹配index+匹配长度\r\n      while (match = defaultTagRE.exec(text)) {\r\n        const index = match.index //当前匹配位置\r\n        if (index > lastIndex) { // ---{{data}} 取---\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {  // {{data}}--- 取---\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}","/* \r\n  1.html字符串->ast语法树\r\n  对html字符串进行match,将匹配内容删除，将捕获内容传入对应节点分类的函数生成ast语法树\r\n  2.ast语法树->变成render\r\n  ast->拼接字符串->函数\r\n*/\r\nimport { parseHTML } from './parseHTML'\r\nimport { codegen } from './gengerate'\r\n\r\n\r\nexport function compileToFunction(el) {\r\n  const ast = parseHTML(el)\r\n  console.log('ast:', ast)\r\n\r\n  let code = codegen(ast)\r\n  console.log(code)\r\n\r\n  code = `with(this){return ${code}}`\r\n  const render = new Function(code)\r\n  return render\r\n}\r\n\r\n\r\n","const strats = {}\r\nconst LIFECYCLE_hook = [\r\n  'beforeCreate',\r\n  'created'\r\n]\r\nLIFECYCLE_hook.forEach(hook => {\r\n  /* \r\n    初始：旧：undefined 新：fn 返回 [fn]\r\n    旧：[fn] 新：undefined 返回 [fn]\r\n    旧：[fn] 新：fn 返回 [fn,fn]\r\n  */\r\n  strats[hook] = function (p, c) {\r\n    if (c) {\r\n      if (p) {\r\n        return p.concat(c)\r\n      } else {\r\n        return [c]\r\n      }\r\n    } else {\r\n      return p\r\n    }\r\n  }\r\n})\r\n\r\nexport function mergeOptions(parent, child) {\r\n  const options = {}\r\n  for (let key in parent) {\r\n    mergeField(key)\r\n  }\r\n  for (let key in child) {\r\n    if (!parent.hasOwnProperty(key)) {  // 相同属性已经设置过\r\n      mergeField(key)\r\n    }\r\n  }\r\n\r\n  function mergeField(key) {\r\n    if (strats[key]) { // 生命周期选项\r\n      options[key] = strats[key](parent[key], child[key])\r\n    } else {\r\n      options[key] = child[key] || parent[key]  // 优先取新选项\r\n    }\r\n  }\r\n  return options\r\n}\r\n\r\n","import { initState } from './initState'\r\nimport { compileToFunction } from './compile/index'\r\nimport { callHook, mountComponent } from './lifecycle'\r\nimport { mergeOptions } from './utils'\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    let vm = this\r\n    vm.$options = mergeOptions(this.constructor.options, options) // 合并选项\r\n    callHook(vm,'beforeCreate')\r\n    // 初始化 data computed watcher\r\n    initState(vm)\r\n    // 渲染模板\r\n    callHook(vm,'created')\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  //创建 $mount\r\n  Vue.prototype.$mount = function (el) {\r\n    let vm = this\r\n    el = document.querySelector(el)\r\n    let options = vm.$options\r\n    // render 比 template 优先级高\r\n    if (!options.render) {\r\n      let template\r\n      if (!options.template && el) {  //没template\r\n        template = el.outerHTML\r\n      } else {\r\n        if(el) {  // 有template\r\n          template = options.template\r\n        }\r\n      }\r\n      if(template && el) {\r\n        const render = compileToFunction(template)\r\n        options.render = render\r\n      }\r\n    }\r\n    mountComponent(vm, el)\r\n  }\r\n}\r\n\r\n\r\n","import {mergeOptions} from './utils'\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  Vue.options = {}\r\n  Vue.mixin = function(mixin) {\r\n    // 将传入选项和全局选项进行合并\r\n    this.options = mergeOptions(this.options, mixin)\r\n    return this\r\n  }\r\n}","import { initLifeCycle } from \"./lifecycle\"\r\nimport { initMixin } from \"./init\"\r\nimport { initGlobalAPI } from \"./globalAPI\"\r\nimport { initStateMixin } from \"./initState\"\r\n\r\nfunction Vue(options) {\r\n  //初始化\r\n  this._init(options)\r\n}\r\ninitMixin(Vue)\r\ninitLifeCycle(Vue)\r\ninitGlobalAPI(Vue)\r\ninitStateMixin(Vue)\r\nexport default Vue"],"names":["createElementVNode","vm","tag","data","key","_len","arguments","length","children","Array","_key","vnode","createTextVNode","text","undefined","tagName","id","Dep","_classCallCheck","subs","_createClass","value","depend","target","addDep","addSub","watcher","push","notify","forEach","update","stack","pushTarget","popTarget","pop","Watch","exprOrFn","options","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","get","console","log","call","evaluate","dep","has","add","i","queueWatcher","run","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","slice","q","$nextTick","callbacks","waiting","flushCallbacks","cbs","timeFn","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","patchProps","el","props","styleName","style","setAttribute","createEl","createElement","item","appendChild","path","oldVNode","isRealElement","nodeType","parentEl","parentNode","newEl","insertBefore","nextSibing","removeChild","initLifeCycle","Vue","prototype","_update","$el","_render","$options","render","_c","apply","concat","_v","_s","_typeof","JSON","stringify","mountComponent","updateComponent","callHook","hook","handlers","handler","oldArrayProtoMethods","ArrayMethods","Object","create","methods","args","result","inserted","splice","ob","__ob__","observerArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","childOb","dependArray","set","current","initState","opts","initData","computed","initComputed","watch","initWatch","_data","proxy","createWatcher","$watch","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","initStateMixin","ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","endTag","root","createParent","createASTElement","attrs","type","parent","start","element","charts","replace","end","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","attr","name","n","codegen","ast","attrObj","genProps","genChildren","code","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","defaultTagRE","map","child","gen","join","node","test","tokens","lastIndex","exec","index","trim","compileToFunction","Function","strats","LIFECYCLE_hook","p","c","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","constructor","$mount","querySelector","template","outerHTML","initGlobalAPI","mixin"],"mappings":"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"}